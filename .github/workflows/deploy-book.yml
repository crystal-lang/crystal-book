name: Deploy book
on:
  push:
  pull_request:
  schedule:
    - cron: '0 6 * * 1'  # Every Monday 6 AM UTC

jobs:
  build:
    name: Deploy book
    runs-on: ubuntu-latest
    steps:
      - name: Download source
        uses: actions/checkout@v2
      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
      - name: Install Python
        uses: actions/setup-python@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements.txt') }}
          restore-keys: pip-
      - name: Install dependencies
        run: make deps
      - name: Build book
        run: LINT=true make build
      - name: Extract branch name to deploy
        id: branch
        shell: bash -x {0}
        run: |
          if [[ $GITHUB_REF =~ ^refs/heads/(master|release/[0-9][0-9.]+)$ ]]; then
            echo "::set-output name=branch::${BASH_REMATCH[1]#release/}"
          fi
      - name: Build versions file
        if: github.event_name == 'push' && steps.branch.outputs.branch != null
        run: scripts/docs-versions.sh origin | tee /dev/stderr > versions.json
      - name: Configure AWS Credentials
        if: github.event_name == 'push' && steps.branch.outputs.branch != null
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy book
        if: github.event_name == 'push' && steps.branch.outputs.branch != null
        run: aws s3 sync ./site s3://crystal-book/reference/${{ steps.branch.outputs.branch }} --delete
      - name: Deploy versions file
        if: github.event_name == 'push' && steps.branch.outputs.branch != null
        run: aws s3 sync . s3://crystal-book/reference --exclude '*' --include 'versions.json'
